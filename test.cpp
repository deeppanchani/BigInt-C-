/*
    DPPL_ASSIGNMENT-1
    BT20CSE105
    BT20CSE119
    BT20CSE122
*/
#include <iostream>
#include "bigint.hpp"

int main(){
    // the following test cases and more have been tested and verified with the output of Java Big Integer

    bigint p1("4191658489819832003249760260918906984890117918930648884118912894915348615315918923024988961");
    bigint p2("999999999999999999999999999999999999999999999999999999999999999999999999");
    bigint p3("23456789111111165789087654678900000000002342342300000000023423423000000000000234234230000000004323423423");
    bigint p4("1111111111111111111111111111111111111111111111111111111111111111111111111111");
    bigint p5("1000000000000000000000000000000000000000000000000000000");
    
    bigint n1("-264536578237482398746827634987623894768784675364235747535");
    bigint n2("-1000000000000000000000000000000000000000000000000000000000000000000000000000000000");
    bigint n3("-999999999999999999999999999999999999999999999999999999999999999999");
    bigint n4("-11111111111111111111111111111111111111111111111111111111111111111111111111111111");
    bigint n5("-65467897856979000000000006745367485957846356475000000000000564563875467534685764753462635700007654656545");

    bigint a1=p1+p2; 
    cout << a1.printBigInt() << endl;

    bigint a2=p2+p3; 
    cout << a2.printBigInt() << endl;

    bigint a3=p3-p4; 
    cout << a3.printBigInt() << endl;

    bigint a4=p4+p5; 
    cout << a4.printBigInt() << endl;

    bigint a5=n1-p2; 
    cout << a5.printBigInt() << endl;

    bigint a6=p1+n4; 
    cout << a6.printBigInt() << endl;

    bigint a7=p4+n3; 
    cout << a7.printBigInt() << endl;
    
    return 0;
}